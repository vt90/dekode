{"version":3,"sources":["constants/addresses.js","constants/notification.js","serviceWorker.js","components/Layout/styles.js","components/Layout/index.js","components/Notification/index.js","components/ConnectedSwitch/index.js","config/routes.js","App.js","reducers/addresses.js","reducers/notification.js","config/redux.js","config/theme.js","index.js","components/Loading/index.js","actions/notifications.js"],"names":["__webpack_require__","d","__webpack_exports__","addressesConstants","ON_GET_ADDRESSES_INIT","ON_GET_ADDRESSES_SUCCESS","ON_GET_ADDRESSES_FAILURE","ON_GET_ADDRESSES_DETAILS_INIT","ON_GET_ADDRESSES_DETAILS_SUCCESS","ON_GET_ADDRESSES_DETAILS_FAILURE","ON_GET_ADDRESSES_TRANSACTIONS_FLOW_INIT","ON_GET_ADDRESSES_TRANSACTIONS_FLOW_SUCCESS","ON_GET_ADDRESSES_TRANSACTIONS_FLOW_FAILURE","ON_SELECT_ADDRESS","notificationActions","ON_NOTIFICATION_SUCCESS_INIT","ON_NOTIFICATION_WARNING_INIT","ON_NOTIFICATION_ERROR_INIT","ON_NOTIFICATION_CLOSE","NOTIFICATION_TYPES","SUCCESS","WARNING","ERROR","Boolean","window","location","hostname","match","styles","theme","toolbar","backgroundColor","& h6","fontWeight","searchForm","minWidth","maxWidth","& button","& *","color","Layout","state","searchAddress","selectedAddress","this","props","setState","newProps","_this2","_this$props","children","classes","goToAddressDetails","react_default","a","createElement","AppBar_default","position","className","Toolbar_default","Typography_default","variant","Incognito_default","NavLink","to","ViewDashboard_default","Paper_default","elevation","concat","onSubmit","ev","preventDefault","TextField_default","style","padding","fullWidth","value","onChange","target","placeholder","InputProps","disableUnderline","Button_default","type","Component","withStyles","NOTIFICATION_POSITION","vertical","horizontal","TransitionComponent","Slide_default","Object","assign","direction","_notificationIcon","close","width","spacing","unit","height","notificationIcon","borderRadius","boxShadow","defineProperty","breakpoints","up","top","left","down","notificationSuccess","palette","secondary","main","notificationWarning","notificationError","error","snackbar-success","& >div","background","snackbar-error","notification","onNotificationClose","CheckCircle_default","root","classNames","AlertCircleOutline_default","AlertCircle_default","message","isString","isObject","errorMessage","Snackbar_default","open","onClose","autoHideDuration","anchorOrigin","snackbar","action","IconButton_default","key","onClick","Close_default","ConnectedSwitch","connect","router","Switch","AddressDetails","Loadable","loader","Promise","all","e","then","bind","loading","Loading","Dashboard","routes","path","component","exact","isAvailable","App","userInfo","filter","route","undefined","isRouteAvailable","components_ConnectedSwitch","map","index","Route","name","render","react","components_Notification","components_Layout","withRedux","addresses","dispatch","address","push","withRouter","initialState","addressInfoList","isLoading","addressDetails","transactionsFlow","levelsBefore","levelsAfter","blockchainId","reducer","_reducer","_ref","payload","objectSpread","notificationType","_ref2","_ref3","history","createHistory","rootReducer","combineReducers","form","formReducer","routerReducer","arguments","length","red","primary","lightBlue","dark","light","default","overrides","generateClassName","createGenerateClassName","jss","create","jssPreset","options","insertionPoint","document","getElementById","createMuiTheme","customTheme","store","routeMiddleware","routerMiddleware","middlewares","thunk","enhancers","applyMiddleware","apply","composeEnhancers","compose","createStore","configureStore","app","es","JssProvider_default","core_styles","CssBaseline_default","MuiPickersUtilsProvider_default","utils","MomentUtils","react_router_redux_es","src_App","ReactDOM","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_1___default","size","onNotificationErrorInit","_constants_notification__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.5cc94ad3.chunk.js","sourcesContent":["/**\n * Created by vladtomsa on 26/11/2018\n */\nexport const addressesConstants = {\n  ON_GET_ADDRESSES_INIT: '@ON_GET_ADDRESSES_INIT',\n  ON_GET_ADDRESSES_SUCCESS: '@ON_GET_ADDRESSES_SUCCESS',\n  ON_GET_ADDRESSES_FAILURE: '@ON_GET_ADDRESSES_FAILURE',\n\n  ON_GET_ADDRESSES_DETAILS_INIT: '@ON_GET_ADDRESSES_DETAILS_INIT',\n  ON_GET_ADDRESSES_DETAILS_SUCCESS: '@ON_GET_ADDRESSES_DETAILS_SUCCESS',\n  ON_GET_ADDRESSES_DETAILS_FAILURE: '@ON_GET_ADDRESSES_DETAILS_FAILURE',\n\n  ON_GET_ADDRESSES_TRANSACTIONS_FLOW_INIT: '@ON_GET_ADDRESSES_TRANSACTIONS_FLOW_INIT',\n  ON_GET_ADDRESSES_TRANSACTIONS_FLOW_SUCCESS: '@ON_GET_ADDRESSES_TRANSACTIONS_FLOW_SUCCESS',\n  ON_GET_ADDRESSES_TRANSACTIONS_FLOW_FAILURE: '@ON_GET_ADDRESSES_TRANSACTIONS_FLOW_FAILURE',\n\n  ON_SELECT_ADDRESS: '@ON_SELECT_ADDRESS'\n};\n","export const notificationActions = {\n  ON_NOTIFICATION_SUCCESS_INIT: '@ON_NOTIFICATION_SUCCESS_INIT',\n  ON_NOTIFICATION_WARNING_INIT: '@ON_NOTIFICATION_WARNING_INIT',\n  ON_NOTIFICATION_ERROR_INIT: '@ON_NOTIFICATION_ERROR_INIT',\n  ON_NOTIFICATION_CLOSE: '@ON_NOTIFICATION_CLOSE',\n  NOTIFICATION_TYPES: {\n    SUCCESS: 1,\n    WARNING: 2,\n    ERROR: 3,\n  },\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * Created by vladtomsa on 26/11/2018\n */\nconst styles = (theme) => {\n  return {\n    toolbar: {\n      backgroundColor: '#FFF',\n      '& h6': {\n        fontWeight: 300,\n      },\n    },\n    searchForm: {\n      minWidth: 500,\n      maxWidth: '100%',\n      '& button': {\n        '& *': {\n          color: '#FFF',\n        },\n      },\n    },\n  };\n};\n\nexport default styles;\n","/**\n * Created by vladtomsa on 26/09/2018\n */\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {NavLink} from 'react-router-dom';\nimport {withStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Dashboard from 'mdi-material-ui/ViewDashboard';\nimport Incognito from 'mdi-material-ui/Incognito';\nimport styles from './styles';\n\nclass Layout extends Component {\n  state = {\n    searchAddress: '',\n  };\n\n  componentDidMount() {\n    const {selectedAddress} = this.props;\n\n    this.setState({searchAddress: selectedAddress})\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    const {selectedAddress} = this.props;\n\n    if (\n      newProps\n      && newProps.selectedAddress\n      && selectedAddress !== newProps.selectedAddress\n    ) {\n      this.setState({searchAddress: newProps.selectedAddress});\n    }\n  }\n\n\n  render() {\n    const {\n      children,\n      classes,\n      goToAddressDetails,\n    } = this.props;\n\n    const {searchAddress} = this.state;\n\n    return (\n      <div>\n        <AppBar position=\"static\" color=\"default\" className={classes.toolbar}>\n          <Toolbar className=\"wrap-content\">\n            <Typography variant=\"h6\" color=\"primary\" className=\"flex align-center\">\n              <Incognito/>&nbsp;DEKODE\n            </Typography>\n            &nbsp;&nbsp;\n            <NavLink to=\"/\">\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" className=\"flex align-center\">\n                <Dashboard/> &nbsp; Dashboard\n              </Typography>\n            </NavLink>\n\n            <span className=\"fill-flex\">&nbsp;</span>\n\n            <Paper elevation={4} className={`flex align-center ${classes.searchForm}`}>\n              <form\n                onSubmit={(ev) => {\n                  ev.preventDefault();\n                  goToAddressDetails(searchAddress);\n                }}\n                className=\"fill-flex\"\n              >\n                <TextField\n                  style={{ padding: '6px 12px' }}\n                  fullWidth\n                  value={searchAddress}\n                  onChange={(ev) => this.setState({searchAddress: ev.target.value})}\n                  placeholder=\"Search for address\"\n                  InputProps={{\n                    disableUnderline: true,\n                  }}\n                />\n              </form>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Search\n              </Button>\n            </Paper>\n          </Toolbar>\n        </AppBar>\n\n        {children}\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  selectedAddress: PropTypes.any,\n  goToAddressDetails: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Layout);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport CloseIcon from 'mdi-material-ui/Close';\nimport ErrorIcon from 'mdi-material-ui/AlertCircle';\nimport SuccessIcon from 'mdi-material-ui/CheckCircle';\nimport WarningIcon from 'mdi-material-ui/AlertCircleOutline';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport isString from 'lodash/isString';\nimport isObject from 'lodash/isObject';\n\nconst styles = theme => ({\n  close: {\n    width: theme.spacing.unit * 4,\n    height: theme.spacing.unit * 4,\n    padding: 0,\n  },\n  notificationIcon: {\n    borderRadius: '50%',\n    backgroundColor: '#FFFFFF',\n    boxShadow: ' 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12)',\n    [theme.breakpoints.up('md')]: {\n      position: 'absolute',\n      top: theme.spacing.unit,\n      left: -1 * theme.spacing.unit * 2,\n      width: theme.spacing.unit * 4,\n      height: theme.spacing.unit * 4,\n    },\n    [theme.breakpoints.down('sm')]: {\n      top: 6,\n      position: 'relative',\n    },\n  },\n  notificationSuccess: {\n    color: theme.palette.secondary.main,\n  },\n  notificationWarning: {\n    color: theme.palette.secondary.main,\n  },\n  notificationError: {\n    color: theme.palette.error.main,\n  },\n  'snackbar-success': {\n    '& >div': {\n      background: theme.palette.secondary.main,\n    }\n  },\n  'snackbar-error': {\n    '& >div': {\n      background: theme.palette.error.main,\n    }\n  },\n});\n\nconst NOTIFICATION_POSITION = {\n  vertical: 'top',\n  horizontal: 'right'\n};\n\nconst NOTIFICATION_TIMEOUT = 4000;\n\nconst TransitionComponent = (props) => <Slide {...props} direction=\"left\"/>;\n\nconst Notification = (props) => {\n  const { classes, notification, onNotificationClose } = props;\n\n  let notificationIcon;\n\n  switch (notification.type) {\n    case ('success'):\n      notificationIcon = <SuccessIcon classes={{root: classNames(classes.notificationIcon, classes.notificationSuccess)}}/>\n      break;\n    case ('warning'):\n      notificationIcon = <WarningIcon classes={{root: classNames(classes.notificationIcon, classes.notificationWarning)}}/>\n      break;\n    default:\n      notificationIcon = <ErrorIcon classes={{root: classNames(classes.notificationIcon, classes.notificationError)}}/>\n      break;\n  }\n\n  let message = null;\n\n  if (isString(notification.notification)) {\n    message = notification.notification;\n  }\n  else if (isObject(notification.notification)) {\n    message = notification.notification.message || notification.notification.errorMessage\n  }\n\n  return (\n    <Snackbar\n      open={!!(notification)}\n      onClose={onNotificationClose}\n      message={\n        <span>\n          { notificationIcon }&nbsp;{ message }\n        </span>\n      }\n      autoHideDuration={NOTIFICATION_TIMEOUT}\n      anchorOrigin={NOTIFICATION_POSITION}\n      className={`${classes[`snackbar-${notification.type}`]} ${classes.snackbar}`}\n      TransitionComponent={TransitionComponent}\n      action={[\n        <IconButton\n          key=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onNotificationClose}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n};\n\nNotification.propTypes = {\n  classes: PropTypes.object.isRequired,\n  notification: PropTypes.any,\n  onNotificationClose: PropTypes.func,\n};\n\nexport default withStyles(styles)(Notification);\n","/**\n * Created by vladtomsa on 26/09/2018\n */\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst ConnectedSwitch = connect((state) => ({\n  location: state.router.location,\n}))(Switch);\n\nexport default ConnectedSwitch;\n","// import groupBy from 'lodash/groupBy';\nimport Loadable from 'react-loadable';\nimport Loading from '../components/Loading';\n\nconst AddressDetails = Loadable({\n  loader: () => import('../containers/Address/Details'),\n  loading: Loading,\n});\n\nconst Dashboard = Loadable({\n  loader: () => import('../containers/Dashboard'),\n  loading: Loading,\n});\n\n// const isLoggedIn = (userInfo) => !!(userInfo);\n\nconst isRouteAvailable = (route, userInfo) => (route.isAvailable === undefined || route.isAvailable(userInfo));\n\n// export const MENU_GROUPS = {\n//   IDENTITY: 'Identity',\n//   NOTARY: 'Notary',\n//   ADMIN: 'Administration',\n// };\n\nconst routes = [\n  {\n    path: '/address/:address',\n    component: AddressDetails,\n    exact: true,\n    isAvailable: () => true,\n  },\n  {\n    path: '/',\n    exact: true,\n    component: Dashboard,\n    isAvailable: () => true,\n  },\n];\n\nexport const getApplicationRoutes = (userInfo) => {\n  return routes.filter((route) => isRouteAvailable(route, userInfo));\n};\n\n// export const getMenuRoutes = (userInfo) => {\n//   const availableMenuRoutes = getApplicationRoutes(userInfo).filter((route) => route.showInMenu);\n//\n//   const groupedRoutes = groupBy(availableMenuRoutes, 'parent');\n//\n//   let menuRoutes = [];\n//\n//   Object.keys(groupedRoutes)\n//     .forEach(key => {\n//       if (key === 'undefined') {\n//         // here are the routes that have no parent\n//         menuRoutes = [...menuRoutes, ...groupedRoutes[key]];\n//       }\n//       else {\n//         menuRoutes = [...menuRoutes, {name: key, children: groupedRoutes[key]}];\n//       }\n//     });\n//\n//   return menuRoutes;\n// };\n","import React, {Component, Fragment} from 'react';\nimport {Route} from 'react-router';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {push} from 'react-router-redux';\nimport * as notificationActions from './actions/notifications';\nimport Layout from './components/Layout';\nimport Notification from './components/Notification';\nimport ConnectedSwitch from './components/ConnectedSwitch';\nimport {getApplicationRoutes} from './config/routes';\n\nclass App extends Component {\n  render() {\n    const {\n      goToAddressDetails, selectedAddress, notification, onNotificationClose,\n    } = this.props;\n\n    const routes = getApplicationRoutes();\n\n    const router = (\n      <ConnectedSwitch>\n        {\n          routes.map((route, index) => (\n            <Route key={index} exact={route.exact} path={route.path} name={route.name}\n                   component={route.component}/>\n          ))\n        }\n\n        <Route render={() => (<div>Not existing</div>)}/>\n      </ConnectedSwitch>\n    );\n\n    return (\n      <Fragment>\n        {\n          !!(notification)\n            ? (\n              <Notification\n                notification={notification}\n                onNotificationClose={onNotificationClose}\n              />\n            )\n            : null\n        }\n\n        <Layout selectedAddress={selectedAddress} goToAddressDetails={goToAddressDetails}>\n          {router}\n        </Layout>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedAddress: state.addresses.selectedAddress,\n    notification: state.notification.notification,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onNotificationClose: () => dispatch(notificationActions.onNotificationClose()),\n  goToAddressDetails: (address) => dispatch(push(`/address/${address}`)),\n});\n\nconst withRedux = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default withRouter(withRedux);\n","/**\n * Created by vladtomsa on 26/11/2018\n */\nimport {addressesConstants} from '../constants/addresses';\nconst initialState = {\n  addressInfoList: [],\n  isLoading: null,\n  selectedAddress: null,\n  addressDetails: null,\n  transactionsFlow: null,\n  levelsBefore: 1,\n  levelsAfter: 1,\n  blockchainId: 2,\n};\n\n\nexport default (state = initialState, {type, payload}) => {\n  switch (type) {\n    case (addressesConstants.ON_GET_ADDRESSES_INIT):\n      return {...state, isLoading: addressesConstants.ON_GET_ADDRESSES_INIT};\n\n    case (addressesConstants.ON_GET_ADDRESSES_SUCCESS):\n      return {...state, isLoading: null, addressInfoList: payload};\n\n    case (addressesConstants.ON_GET_ADDRESSES_DETAILS_INIT):\n      return {...state, isLoading: addressesConstants.ON_GET_ADDRESSES_DETAILS_INIT, addressDetails: null};\n\n    case (addressesConstants.ON_GET_ADDRESSES_DETAILS_SUCCESS):\n      return {...state, isLoading: null, addressDetails: payload};\n\n    case (addressesConstants.ON_GET_ADDRESSES_TRANSACTIONS_FLOW_INIT):\n      return {\n        ...state,\n        isLoading: addressesConstants.ON_GET_ADDRESSES_TRANSACTIONS_FLOW_INIT,\n        levelsBefore: payload.levelsBefore,\n        levelsAfter: payload.levelsAfter,\n        blockchainId: payload.blockchainId,\n        transactionsFlow: null,\n      };\n    case (addressesConstants.ON_GET_ADDRESSES_TRANSACTIONS_FLOW_SUCCESS):\n      return {\n        ...state,\n        transactionsFlow: payload,\n        isLoading: null,\n      };\n\n    case (addressesConstants.ON_GET_ADDRESSES_FAILURE):\n    case (addressesConstants.ON_GET_ADDRESSES_DETAILS_FAILURE):\n    case (addressesConstants.ON_GET_ADDRESSES_TRANSACTIONS_FLOW_FAILURE):\n      return {...state, isLoading: null};\n\n    case (addressesConstants.ON_SELECT_ADDRESS):\n      return {...state, selectedAddress: payload};\n    default:\n      return state;\n  }\n}\n","import { notificationActions } from '../constants/notification';\n\nconst reducer = {\n  [notificationActions.ON_NOTIFICATION_SUCCESS_INIT]: (state, { payload }) => ({ ...state, notification: payload, notificationType: notificationActions.NOTIFICATION_TYPES.SUCCESS }),\n  [notificationActions.ON_NOTIFICATION_WARNING_INIT]: (state, { payload }) => ({ ...state, notification: payload, notificationType: notificationActions.NOTIFICATION_TYPES.WARNING }),\n  [notificationActions.ON_NOTIFICATION_ERROR_INIT]: (state, { payload }) => ({ ...state, notification: payload, notificationType: notificationActions.NOTIFICATION_TYPES.ERROR }),\n  [notificationActions.ON_NOTIFICATION_CLOSE]: (state) => ({ ...state, notification: null, notificationType: null }),\n};\n\nconst initialState = {\n  notification: null,\n  notificationType: null,\n};\n\nexport default (state = initialState, action) => {\n  return reducer[action.type] ? reducer[action.type](state, action) : state;\n};\n","/**\n * Created by vladtomsa on 26/09/2018\n */\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport {routerMiddleware, routerReducer} from 'react-router-redux';\nimport {reducer as formReducer} from 'redux-form';\nimport createHistory from 'history/createBrowserHistory';\nimport thunk from 'redux-thunk';\n\nimport addressesReducer from '../reducers/addresses';\nimport notificationReducer from '../reducers/notification';\n\nexport const history = createHistory();\n\nexport const rootReducer = combineReducers({\n    form: formReducer,\n    router: routerReducer,\n    addresses: addressesReducer,\n    notification: notificationReducer,\n});\n\nexport default function configureStore(initialState) {\n    const routeMiddleware = routerMiddleware(history);\n\n    const middlewares = [\n        thunk,\n        routeMiddleware,\n    ];\n\n    const enhancers = [\n        applyMiddleware(...middlewares),\n    ];\n\n    // Redux DevTools Extension is installed use it, otherwise use Redux compose\n    /* eslint-disable no-underscore-dangle */\n    const composeEnhancers =\n        process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n            ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                shouldHotReload: false, // Prevent recomputing reducers for `replaceReducer`\n            })\n            : compose;\n    /* eslint-enable */\n\n    const store = createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(...enhancers)\n    );\n\n    return store;\n}\n","/**\n * Created by vladtomsa on 26/09/2018\n */\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport red from '@material-ui/core/colors/red';\n\nconst error = red;\n\nconst themeOverrides = {};\n\nconst theme = {\n    palette: {\n        primary: {\n            main: lightBlue[500],\n            dark: lightBlue[800],\n        },\n        secondary: {\n            light: '#B3E5FC',\n            main: '#09D0FF',\n            dark: '#01A9EE',\n        },\n        error: {\n            main: error[500],\n        },\n        background: {default: '#F7F7F7'},\n    },\n    overrides: themeOverrides,\n};\n\nexport default theme;\n","/**\n * Created by vladtomsa on 26/09/2018\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\n// Redux dependencies\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter} from 'react-router-redux';\nimport configureStore, {history} from './config/redux';\n\n// Material UI dependencies\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport MuiPickersUtilsProvider from 'material-ui-pickers/utils/MuiPickersUtilsProvider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {createGenerateClassName, jssPreset} from '@material-ui/core/styles';\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport MomentUtils from 'material-ui-pickers/utils/moment-utils';\nimport {create} from 'jss';\nimport customTheme from './config/theme';\n\n// Global styles accessible from any component\nimport 'styles/global.css';\n\n/**\n * Build configurations\n * */\nconst generateClassName = createGenerateClassName();\nconst jss = create(jssPreset());\n// We define a custom insertion point that JSS will look for injecting the styles in the DOM.\njss.options.insertionPoint = document.getElementById('jss-insertion-point');\n\n\n// Create custom theme\nconst theme = createMuiTheme(customTheme);\n\n// Create redux store\nconst store = configureStore();\n\n\nconst app = (\n    <Provider store={store}>\n        <JssProvider jss={jss} generateClassName={generateClassName}>\n            <MuiThemeProvider theme={theme}>\n                <CssBaseline/>\n\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <ConnectedRouter history={history}>\n                        <App/>\n                    </ConnectedRouter>\n                </MuiPickersUtilsProvider>\n            </MuiThemeProvider>\n        </JssProvider>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Loading  = () => (\n  <div className=\"flex justify-center layout-padding\" style={{ width: '100%', padding: 20, }}>\n    <CircularProgress size={46} color=\"secondary\"/>\n  </div>\n);\n\nexport default Loading;\n","import { notificationActions } from '../constants/notification';\n\nexport const onNotificationSuccessInit = (notification) => ({\n  type: notificationActions.ON_NOTIFICATION_SUCCESS_INIT,\n  payload: {notification, type: 'success'}\n});\n\nexport const onNotificationWarningInit = (notification) => ({\n  type: notificationActions.ON_NOTIFICATION_WARNING_INIT,\n  payload: {notification, type: 'warning'}\n});\n\nexport const onNotificationErrorInit = (notification) => ({\n  type: notificationActions.ON_NOTIFICATION_ERROR_INIT,\n  payload: {notification, type: 'error'}\n});\n\nexport const onNotificationClose = () => ({type: notificationActions.ON_NOTIFICATION_CLOSE});\n"],"sourceRoot":""}